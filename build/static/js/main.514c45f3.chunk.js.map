{"version":3,"sources":["components/readTodos.js","components/writeTodos.js","App.js","reportWebVitals.js","index.js"],"names":["ReadTodos","useEffect","a","axios","get","result","setTodadata","data","fetchData","useState","tododata","del","id","window","confirm","delete","alert","location","replace","Table","striped","bordered","hover","map","todo","action","completed","onClick","_id","WriteTodos","todoName","todoAction","NewTodo","setNewTodo","upload","console","log","post","then","req","catch","err","error","Form","Group","onChange","e","target","value","className","controlId","Label","Control","type","placeholder","as","style","height","Button","variant","App","Navbar","bg","Container","to","Brand","Nav","Link","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.514c45f3.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport axios from 'axios';\r\n\r\n\r\n const ReadTodos = () => {\r\n\r\n\r\n  useEffect(async () => {\r\n        const fetchData = async () => {\r\n           const result = await axios.get('https://todoapp2108.herokuapp.com/data')\r\n           setTodadata(result.data);\r\n         };\r\n         // 실행함으로써 데이타를 fetching합니다.\r\n         fetchData();\r\n       }, []);\r\n     \r\n \r\n  const [tododata,setTodadata] = useState([]);\r\n\r\n\r\n  const del = async (id)=>{\r\n    if(window.confirm('삭제 하겠습니까?')){\r\n       await axios.delete(`https://todoapp2108.herokuapp.com/del/${id}`)\r\n       window.alert('삭제 되었습니다.')\r\n       window.location.replace(\"/home\");\r\n        }}\r\n\r\n\r\nreturn (\r\n        <div>\r\n            <Table striped bordered hover>\r\n  <thead>\r\n    <tr>\r\n      <th>Todo</th>\r\n      <th>Action</th>\r\n      <th>비고</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n  {tododata.map(data=>(\r\n      <tr key={data._id}>\r\n       <td>{data.todo}</td>\r\n        <td>{data.action}</td>\r\n         <td>{data.completed}</td>\r\n        <td><button onClick={()=>{del(data._id)}}>삭제</button></td> \r\n        </tr>))}\r\n                  \r\n  </tbody>\r\n</Table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  ReadTodos;","import React, {useState}  from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport  Button  from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst WriteTodos = () => {\r\n\r\nconst [NewTodo, setNewTodo] = useState(\r\n        {todoName:\"\" ,\r\n        todoAction:\"\", \r\n        });\r\n\r\nconst todoChange = (e)=>{setNewTodo({...NewTodo,\r\n  todoName: e.target.value});}\r\nconst actionChange = (e)=>{setNewTodo({...NewTodo,\r\n  todoAction: e.target.value});}\r\n\r\nconst upload = async()=>{console.log(NewTodo);\r\n               await axios.post('https://todoapp2108.herokuapp.com/new',{\r\n                    todo: NewTodo.todoName,\r\n                    action: NewTodo.todoAction}\r\n                       ) \r\n                .then((req)=>{console.log(req)})\r\n                .catch((err)=>{console.error(err)})\r\n                window.location.replace(\"/home\");\r\n                }            \r\n\r\n\r\n                \r\n    return (\r\n        <div>\r\n    <Form>\r\n  <Form.Group onChange={todoChange} className=\"mb-3\" controlId=\"formGroupTodo\">\r\n    <Form.Label>TO DO</Form.Label>\r\n    <Form.Control type=\"textarea\" placeholder=\"할 일의 이름\" />\r\n  </Form.Group>\r\n\r\n  <Form.Group onChange={actionChange} className=\"mb-3\" controlId=\"formGroupAction\">\r\n    <Form.Label>Action</Form.Label>\r\n    <Form.Control \r\n      as=\"textarea\"\r\n      placeholder=\"해야 할 일을 구체적으로 적으시오\"\r\n      style={{ height: '100px' }} />\r\n  </Form.Group>\r\n\r\n  <Button onClick={upload} variant=\"dark\">저장하기</Button>{''}\r\n</Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WriteTodos;\r\n","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport {LinkContainer} from 'react-router-bootstrap'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Container from 'react-bootstrap/Container';\nimport ReadTodos from './components/readTodos';\nimport WriteTodos from './components/writeTodos';\n\n\nfunction App() {\n\n\n  \n\n  return (\n    <div className=\"App\">\n      <Router>\n<Navbar bg=\"dark\" variant=\"dark\">\n    <Container>\n\n    <LinkContainer to='/home'>\n      <Navbar.Brand>TodoProject</Navbar.Brand>\n    </LinkContainer>\n    <Nav className=\"me-auto\">\n    \n    <LinkContainer to='/home'>\n      <Nav.Link >Home</Nav.Link>\n      </LinkContainer>\n      \n     <LinkContainer to='/write'> \n     <Nav.Link >Add Todo</Nav.Link>\n     </LinkContainer>\n    </Nav>\n\n    </Container>\n</Navbar>\n\n<Switch>\n<Route path=\"/ \">\n          <ReadTodos/>\n          </Route>\n<Route path=\"/home\">\n          <ReadTodos/>\n          </Route>\n          <Route path= \"/write\">\n          <WriteTodos/>\n          </Route>\n</Switch>\n</Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}